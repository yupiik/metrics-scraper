# HELP jvm_class_count Number of classes currently loaded.
# TYPE jvm_class_count gauge
jvm_class_count{otel_scope_name="io.opentelemetry.runtime-telemetry-java8",otel_scope_version="2.0.0-alpha"} 18924.0
# HELP jvm_class_loaded_total Number of classes loaded since JVM start.
# TYPE jvm_class_loaded_total counter
jvm_class_loaded_total{otel_scope_name="io.opentelemetry.runtime-telemetry-java8",otel_scope_version="2.0.0-alpha"} 18920.0
# HELP jvm_class_unloaded_total Number of classes unloaded since JVM start.
# TYPE jvm_class_unloaded_total counter
jvm_class_unloaded_total{otel_scope_name="io.opentelemetry.runtime-telemetry-java8",otel_scope_version="2.0.0-alpha"} 1.0
# HELP jvm_cpu_count Number of processors available to the Java virtual machine.
# TYPE jvm_cpu_count gauge
jvm_cpu_count{otel_scope_name="io.opentelemetry.runtime-telemetry-java8",otel_scope_version="2.0.0-alpha"} 16.0
# HELP jvm_cpu_recent_utilization_ratio Recent CPU utilization for the process as reported by the JVM.
# TYPE jvm_cpu_recent_utilization_ratio gauge
jvm_cpu_recent_utilization_ratio{otel_scope_name="io.opentelemetry.runtime-telemetry-java8",otel_scope_version="2.0.0-alpha"} 0.0
# HELP jvm_cpu_time_seconds_total CPU time used by the process as reported by the JVM.
# TYPE jvm_cpu_time_seconds_total counter
jvm_cpu_time_seconds_total{otel_scope_name="io.opentelemetry.runtime-telemetry-java8",otel_scope_version="2.0.0-alpha"} 72.37
# HELP jvm_gc_duration_seconds Duration of JVM garbage collection actions.
# TYPE jvm_gc_duration_seconds histogram
jvm_gc_duration_seconds_bucket{jvm_gc_action="end of minor GC",jvm_gc_name="G1 Young Generation",otel_scope_name="io.opentelemetry.runtime-telemetry-java8",otel_scope_version="2.0.0-alpha",le="0.01"} 8
jvm_gc_duration_seconds_bucket{jvm_gc_action="end of minor GC",jvm_gc_name="G1 Young Generation",otel_scope_name="io.opentelemetry.runtime-telemetry-java8",otel_scope_version="2.0.0-alpha",le="0.1"} 12
jvm_gc_duration_seconds_bucket{jvm_gc_action="end of minor GC",jvm_gc_name="G1 Young Generation",otel_scope_name="io.opentelemetry.runtime-telemetry-java8",otel_scope_version="2.0.0-alpha",le="1.0"} 12
jvm_gc_duration_seconds_bucket{jvm_gc_action="end of minor GC",jvm_gc_name="G1 Young Generation",otel_scope_name="io.opentelemetry.runtime-telemetry-java8",otel_scope_version="2.0.0-alpha",le="10.0"} 12
jvm_gc_duration_seconds_bucket{jvm_gc_action="end of minor GC",jvm_gc_name="G1 Young Generation",otel_scope_name="io.opentelemetry.runtime-telemetry-java8",otel_scope_version="2.0.0-alpha",le="+Inf"} 12
jvm_gc_duration_seconds_count{jvm_gc_action="end of minor GC",jvm_gc_name="G1 Young Generation",otel_scope_name="io.opentelemetry.runtime-telemetry-java8",otel_scope_version="2.0.0-alpha"} 12
jvm_gc_duration_seconds_sum{jvm_gc_action="end of minor GC",jvm_gc_name="G1 Young Generation",otel_scope_name="io.opentelemetry.runtime-telemetry-java8",otel_scope_version="2.0.0-alpha"} 0.16200000000000003
# HELP jvm_memory_committed_bytes Measure of memory committed.
# TYPE jvm_memory_committed_bytes gauge
jvm_memory_committed_bytes{jvm_memory_pool_name="CodeHeap 'non-nmethods'",jvm_memory_type="non_heap",otel_scope_name="io.opentelemetry.runtime-telemetry-java8",otel_scope_version="2.0.0-alpha"} 3407872.0
jvm_memory_committed_bytes{jvm_memory_pool_name="CodeHeap 'non-profiled nmethods'",jvm_memory_type="non_heap",otel_scope_name="io.opentelemetry.runtime-telemetry-java8",otel_scope_version="2.0.0-alpha"} 9633792.0
jvm_memory_committed_bytes{jvm_memory_pool_name="CodeHeap 'profiled nmethods'",jvm_memory_type="non_heap",otel_scope_name="io.opentelemetry.runtime-telemetry-java8",otel_scope_version="2.0.0-alpha"} 2.1692416E7
jvm_memory_committed_bytes{jvm_memory_pool_name="Compressed Class Space",jvm_memory_type="non_heap",otel_scope_name="io.opentelemetry.runtime-telemetry-java8",otel_scope_version="2.0.0-alpha"} 1.4811136E7
jvm_memory_committed_bytes{jvm_memory_pool_name="G1 Eden Space",jvm_memory_type="heap",otel_scope_name="io.opentelemetry.runtime-telemetry-java8",otel_scope_version="2.0.0-alpha"} 2.68435456E8
jvm_memory_committed_bytes{jvm_memory_pool_name="G1 Old Gen",jvm_memory_type="heap",otel_scope_name="io.opentelemetry.runtime-telemetry-java8",otel_scope_version="2.0.0-alpha"} 3.3554432E8
jvm_memory_committed_bytes{jvm_memory_pool_name="G1 Survivor Space",jvm_memory_type="heap",otel_scope_name="io.opentelemetry.runtime-telemetry-java8",otel_scope_version="2.0.0-alpha"} 6.7108864E7
jvm_memory_committed_bytes{jvm_memory_pool_name="Metaspace",jvm_memory_type="non_heap",otel_scope_name="io.opentelemetry.runtime-telemetry-java8",otel_scope_version="2.0.0-alpha"} 1.16391936E8
# HELP jvm_memory_limit_bytes Measure of max obtainable memory.
# TYPE jvm_memory_limit_bytes gauge
jvm_memory_limit_bytes{jvm_memory_pool_name="CodeHeap 'non-nmethods'",jvm_memory_type="non_heap",otel_scope_name="io.opentelemetry.runtime-telemetry-java8",otel_scope_version="2.0.0-alpha"} 7606272.0
jvm_memory_limit_bytes{jvm_memory_pool_name="CodeHeap 'non-profiled nmethods'",jvm_memory_type="non_heap",otel_scope_name="io.opentelemetry.runtime-telemetry-java8",otel_scope_version="2.0.0-alpha"} 1.22028032E8
jvm_memory_limit_bytes{jvm_memory_pool_name="CodeHeap 'profiled nmethods'",jvm_memory_type="non_heap",otel_scope_name="io.opentelemetry.runtime-telemetry-java8",otel_scope_version="2.0.0-alpha"} 1.22023936E8
jvm_memory_limit_bytes{jvm_memory_pool_name="Compressed Class Space",jvm_memory_type="non_heap",otel_scope_name="io.opentelemetry.runtime-telemetry-java8",otel_scope_version="2.0.0-alpha"} 1.073741824E9
jvm_memory_limit_bytes{jvm_memory_pool_name="G1 Old Gen",jvm_memory_type="heap",otel_scope_name="io.opentelemetry.runtime-telemetry-java8",otel_scope_version="2.0.0-alpha"} 5.0331648E10
# HELP jvm_memory_used_after_last_gc_bytes Measure of memory used, as measured after the most recent garbage collection event on this pool.
# TYPE jvm_memory_used_after_last_gc_bytes gauge
jvm_memory_used_after_last_gc_bytes{jvm_memory_pool_name="G1 Eden Space",jvm_memory_type="heap",otel_scope_name="io.opentelemetry.runtime-telemetry-java8",otel_scope_version="2.0.0-alpha"} 0.0
jvm_memory_used_after_last_gc_bytes{jvm_memory_pool_name="G1 Old Gen",jvm_memory_type="heap",otel_scope_name="io.opentelemetry.runtime-telemetry-java8",otel_scope_version="2.0.0-alpha"} 0.0
jvm_memory_used_after_last_gc_bytes{jvm_memory_pool_name="G1 Survivor Space",jvm_memory_type="heap",otel_scope_name="io.opentelemetry.runtime-telemetry-java8",otel_scope_version="2.0.0-alpha"} 3.64836E7
# HELP jvm_memory_used_bytes Measure of memory used.
# TYPE jvm_memory_used_bytes gauge
jvm_memory_used_bytes{jvm_memory_pool_name="CodeHeap 'non-nmethods'",jvm_memory_type="non_heap",otel_scope_name="io.opentelemetry.runtime-telemetry-java8",otel_scope_version="2.0.0-alpha"} 1472896.0
jvm_memory_used_bytes{jvm_memory_pool_name="CodeHeap 'non-profiled nmethods'",jvm_memory_type="non_heap",otel_scope_name="io.opentelemetry.runtime-telemetry-java8",otel_scope_version="2.0.0-alpha"} 9616128.0
jvm_memory_used_bytes{jvm_memory_pool_name="CodeHeap 'profiled nmethods'",jvm_memory_type="non_heap",otel_scope_name="io.opentelemetry.runtime-telemetry-java8",otel_scope_version="2.0.0-alpha"} 2.158784E7
jvm_memory_used_bytes{jvm_memory_pool_name="Compressed Class Space",jvm_memory_type="non_heap",otel_scope_name="io.opentelemetry.runtime-telemetry-java8",otel_scope_version="2.0.0-alpha"} 1.3835224E7
jvm_memory_used_bytes{jvm_memory_pool_name="G1 Eden Space",jvm_memory_type="heap",otel_scope_name="io.opentelemetry.runtime-telemetry-java8",otel_scope_version="2.0.0-alpha"} 1.34217728E8
jvm_memory_used_bytes{jvm_memory_pool_name="G1 Old Gen",jvm_memory_type="heap",otel_scope_name="io.opentelemetry.runtime-telemetry-java8",otel_scope_version="2.0.0-alpha"} 1.81257728E8
jvm_memory_used_bytes{jvm_memory_pool_name="G1 Survivor Space",jvm_memory_type="heap",otel_scope_name="io.opentelemetry.runtime-telemetry-java8",otel_scope_version="2.0.0-alpha"} 3.64836E7
jvm_memory_used_bytes{jvm_memory_pool_name="Metaspace",jvm_memory_type="non_heap",otel_scope_name="io.opentelemetry.runtime-telemetry-java8",otel_scope_version="2.0.0-alpha"} 1.1413232E8
# HELP jvm_thread_count Number of executing platform threads.
# TYPE jvm_thread_count gauge
jvm_thread_count{jvm_thread_daemon="false",jvm_thread_state="runnable",otel_scope_name="io.opentelemetry.runtime-telemetry-java8",otel_scope_version="2.0.0-alpha"} 45.0
jvm_thread_count{jvm_thread_daemon="false",jvm_thread_state="timed_waiting",otel_scope_name="io.opentelemetry.runtime-telemetry-java8",otel_scope_version="2.0.0-alpha"} 14.0
jvm_thread_count{jvm_thread_daemon="false",jvm_thread_state="waiting",otel_scope_name="io.opentelemetry.runtime-telemetry-java8",otel_scope_version="2.0.0-alpha"} 6.0
jvm_thread_count{jvm_thread_daemon="true",jvm_thread_state="runnable",otel_scope_name="io.opentelemetry.runtime-telemetry-java8",otel_scope_version="2.0.0-alpha"} 15.0
jvm_thread_count{jvm_thread_daemon="true",jvm_thread_state="timed_waiting",otel_scope_name="io.opentelemetry.runtime-telemetry-java8",otel_scope_version="2.0.0-alpha"} 27.0
jvm_thread_count{jvm_thread_daemon="true",jvm_thread_state="waiting",otel_scope_name="io.opentelemetry.runtime-telemetry-java8",otel_scope_version="2.0.0-alpha"} 48.0
# HELP kafka_consumer_assigned_partitions The number of partitions currently assigned to this consumer
# TYPE kafka_consumer_assigned_partitions gauge
kafka_consumer_assigned_partitions{client_id="consumer-retry-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_consumer_assigned_partitions{client_id="consumer-retry-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_consumer_bytes_consumed_total The total number of bytes consumed
# TYPE kafka_consumer_bytes_consumed_total counter
kafka_consumer_bytes_consumed_total{client_id="consumer-retry-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_consumer_bytes_consumed_total{client_id="consumer-retry-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_consumer_bytes_consumed_rate The average number of bytes consumed per second
# TYPE kafka_consumer_bytes_consumed_rate gauge
kafka_consumer_bytes_consumed_rate{client_id="consumer-retry-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_consumer_bytes_consumed_rate{client_id="consumer-retry-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_consumer_commit_total The total number of commit calls
# TYPE kafka_consumer_commit_total counter
kafka_consumer_commit_total{client_id="consumer-retry-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_consumer_commit_total{client_id="consumer-retry-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_consumer_commit_rate The number of commit calls per second
# TYPE kafka_consumer_commit_rate gauge
kafka_consumer_commit_rate{client_id="consumer-retry-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_consumer_commit_rate{client_id="consumer-retry-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_consumer_connection_close_total The total number of connections closed
# TYPE kafka_consumer_connection_close_total counter
kafka_consumer_connection_close_total{client_id="consumer-retry-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_consumer_connection_close_total{client_id="consumer-retry-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 18.0
# HELP kafka_consumer_connection_close_rate The number of connections closed per second
# TYPE kafka_consumer_connection_close_rate gauge
kafka_consumer_connection_close_rate{client_id="consumer-retry-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_consumer_connection_close_rate{client_id="consumer-retry-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.396930404869013
# HELP kafka_consumer_connection_count The current number of active connections.
# TYPE kafka_consumer_connection_count gauge
kafka_consumer_connection_count{client_id="consumer-retry-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_consumer_connection_count{client_id="consumer-retry-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_consumer_connection_creation_total The total number of new connections established
# TYPE kafka_consumer_connection_creation_total counter
kafka_consumer_connection_creation_total{client_id="consumer-retry-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_consumer_connection_creation_total{client_id="consumer-retry-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_consumer_connection_creation_rate The number of new connections established per second
# TYPE kafka_consumer_connection_creation_rate gauge
kafka_consumer_connection_creation_rate{client_id="consumer-retry-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_consumer_connection_creation_rate{client_id="consumer-retry-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_consumer_failed_authentication_total The total number of connections with failed authentication
# TYPE kafka_consumer_failed_authentication_total counter
kafka_consumer_failed_authentication_total{client_id="consumer-retry-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_consumer_failed_authentication_total{client_id="consumer-retry-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_consumer_failed_authentication_rate The number of connections with failed authentication per second
# TYPE kafka_consumer_failed_authentication_rate gauge
kafka_consumer_failed_authentication_rate{client_id="consumer-retry-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_consumer_failed_authentication_rate{client_id="consumer-retry-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_consumer_failed_reauthentication_total The total number of failed re-authentication of connections
# TYPE kafka_consumer_failed_reauthentication_total counter
kafka_consumer_failed_reauthentication_total{client_id="consumer-retry-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_consumer_failed_reauthentication_total{client_id="consumer-retry-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_consumer_failed_reauthentication_rate The number of failed re-authentication of connections per second
# TYPE kafka_consumer_failed_reauthentication_rate gauge
kafka_consumer_failed_reauthentication_rate{client_id="consumer-retry-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_consumer_failed_reauthentication_rate{client_id="consumer-retry-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_consumer_failed_rebalance_total The total number of failed rebalance events
# TYPE kafka_consumer_failed_rebalance_total counter
kafka_consumer_failed_rebalance_total{client_id="consumer-retry-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_consumer_failed_rebalance_total{client_id="consumer-retry-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_consumer_failed_rebalance_rate_per_hour The number of failed rebalance events per hour
# TYPE kafka_consumer_failed_rebalance_rate_per_hour gauge
kafka_consumer_failed_rebalance_rate_per_hour{client_id="consumer-retry-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_consumer_failed_rebalance_rate_per_hour{client_id="consumer-retry-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_consumer_fetch_total The total number of fetch requests.
# TYPE kafka_consumer_fetch_total counter
kafka_consumer_fetch_total{client_id="consumer-retry-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_consumer_fetch_total{client_id="consumer-retry-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_consumer_fetch_rate The number of fetch requests per second.
# TYPE kafka_consumer_fetch_rate gauge
kafka_consumer_fetch_rate{client_id="consumer-retry-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_consumer_fetch_rate{client_id="consumer-retry-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_consumer_heartbeat_total The total number of heartbeats
# TYPE kafka_consumer_heartbeat_total counter
kafka_consumer_heartbeat_total{client_id="consumer-retry-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_consumer_heartbeat_total{client_id="consumer-retry-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_consumer_heartbeat_rate The number of heartbeats per second
# TYPE kafka_consumer_heartbeat_rate gauge
kafka_consumer_heartbeat_rate{client_id="consumer-retry-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_consumer_heartbeat_rate{client_id="consumer-retry-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_consumer_incoming_byte_total The total number of bytes read off all sockets
# TYPE kafka_consumer_incoming_byte_total counter
kafka_consumer_incoming_byte_total{client_id="consumer-retry-2",node_id="node--1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_consumer_incoming_byte_rate The number of bytes read off all sockets per second
# TYPE kafka_consumer_incoming_byte_rate gauge
kafka_consumer_incoming_byte_rate{client_id="consumer-retry-2",node_id="node--1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_consumer_io_ratio The fraction of time the I/O thread spent doing I/O
# TYPE kafka_consumer_io_ratio gauge
kafka_consumer_io_ratio{client_id="consumer-retry-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_consumer_io_ratio{client_id="consumer-retry-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 2.4341108758930933E-4
# HELP kafka_consumer_io_time_ns_avg The average length of time for I/O per select call in nanoseconds.
# TYPE kafka_consumer_io_time_ns_avg gauge
kafka_consumer_io_time_ns_avg{client_id="consumer-retry-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 35265.8338658147
# HELP kafka_consumer_io_wait_ratio The fraction of time the I/O thread spent waiting
# TYPE kafka_consumer_io_wait_ratio gauge
kafka_consumer_io_wait_ratio{client_id="consumer-retry-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_consumer_io_wait_ratio{client_id="consumer-retry-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.3355530511808419
# HELP kafka_consumer_io_wait_time_ns_avg The average length of time the I/O thread spent waiting for a socket ready for reads or writes in nanoseconds.
# TYPE kafka_consumer_io_wait_time_ns_avg gauge
kafka_consumer_io_wait_time_ns_avg{client_id="consumer-retry-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 4.86165984600639E7
# HELP kafka_consumer_io_waittime_total The total time the I/O thread spent waiting
# TYPE kafka_consumer_io_waittime_total counter
kafka_consumer_io_waittime_total{client_id="consumer-retry-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_consumer_io_waittime_total{client_id="consumer-retry-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 1.5216995318E10
# HELP kafka_consumer_iotime_total The total time the I/O thread spent doing I/O
# TYPE kafka_consumer_iotime_total counter
kafka_consumer_iotime_total{client_id="consumer-retry-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_consumer_iotime_total{client_id="consumer-retry-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 1.1038206E7
# HELP kafka_consumer_join_total The total number of group joins
# TYPE kafka_consumer_join_total counter
kafka_consumer_join_total{client_id="consumer-retry-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_consumer_join_total{client_id="consumer-retry-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_consumer_join_rate The number of group joins per second
# TYPE kafka_consumer_join_rate gauge
kafka_consumer_join_rate{client_id="consumer-retry-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_consumer_join_rate{client_id="consumer-retry-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_consumer_last_heartbeat_seconds_ago The number of seconds since the last coordinator heartbeat was sent
# TYPE kafka_consumer_last_heartbeat_seconds_ago gauge
kafka_consumer_last_heartbeat_seconds_ago{client_id="consumer-retry-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} -1.0
kafka_consumer_last_heartbeat_seconds_ago{client_id="consumer-retry-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} -1.0
# HELP kafka_consumer_last_poll_seconds_ago The number of seconds since the last poll() invocation.
# TYPE kafka_consumer_last_poll_seconds_ago gauge
kafka_consumer_last_poll_seconds_ago{client_id="consumer-retry-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} -1.0
kafka_consumer_last_poll_seconds_ago{client_id="consumer-retry-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_consumer_last_rebalance_seconds_ago The number of seconds since the last successful rebalance event
# TYPE kafka_consumer_last_rebalance_seconds_ago gauge
kafka_consumer_last_rebalance_seconds_ago{client_id="consumer-retry-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} -1.0
kafka_consumer_last_rebalance_seconds_ago{client_id="consumer-retry-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} -1.0
# HELP kafka_consumer_network_io_total The total number of network operations (reads or writes) on all connections
# TYPE kafka_consumer_network_io_total counter
kafka_consumer_network_io_total{client_id="consumer-retry-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_consumer_network_io_total{client_id="consumer-retry-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_consumer_network_io_rate The number of network operations (reads or writes) on all connections per second
# TYPE kafka_consumer_network_io_rate gauge
kafka_consumer_network_io_rate{client_id="consumer-retry-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_consumer_network_io_rate{client_id="consumer-retry-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_consumer_outgoing_byte_total The total number of outgoing bytes sent to all servers
# TYPE kafka_consumer_outgoing_byte_total counter
kafka_consumer_outgoing_byte_total{client_id="consumer-retry-2",node_id="node--1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_consumer_outgoing_byte_rate The number of outgoing bytes sent to all servers per second
# TYPE kafka_consumer_outgoing_byte_rate gauge
kafka_consumer_outgoing_byte_rate{client_id="consumer-retry-2",node_id="node--1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_consumer_poll_idle_ratio_avg The average fraction of time the consumer's poll() is idle as opposed to waiting for the user code to process records.
# TYPE kafka_consumer_poll_idle_ratio_avg gauge
kafka_consumer_poll_idle_ratio_avg{client_id="consumer-retry-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.6663340650568749
# HELP kafka_consumer_rebalance_total The total number of successful rebalance events, each event is composed of several failed re-trials until it succeeded
# TYPE kafka_consumer_rebalance_total counter
kafka_consumer_rebalance_total{client_id="consumer-retry-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_consumer_rebalance_total{client_id="consumer-retry-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_consumer_rebalance_latency_total The total number of milliseconds this consumer has spent in successful rebalances since creation
# TYPE kafka_consumer_rebalance_latency_total counter
kafka_consumer_rebalance_latency_total{client_id="consumer-retry-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_consumer_rebalance_latency_total{client_id="consumer-retry-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_consumer_rebalance_rate_per_hour The number of successful rebalance events per hour, each event is composed of several failed re-trials until it succeeded
# TYPE kafka_consumer_rebalance_rate_per_hour gauge
kafka_consumer_rebalance_rate_per_hour{client_id="consumer-retry-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_consumer_rebalance_rate_per_hour{client_id="consumer-retry-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_consumer_records_consumed_total The total number of records consumed
# TYPE kafka_consumer_records_consumed_total counter
kafka_consumer_records_consumed_total{client_id="consumer-retry-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_consumer_records_consumed_total{client_id="consumer-retry-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_consumer_records_consumed_rate The average number of records consumed per second
# TYPE kafka_consumer_records_consumed_rate gauge
kafka_consumer_records_consumed_rate{client_id="consumer-retry-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_consumer_records_consumed_rate{client_id="consumer-retry-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_consumer_request_total The total number of requests sent
# TYPE kafka_consumer_request_total counter
kafka_consumer_request_total{client_id="consumer-retry-2",node_id="node--1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_consumer_request_rate The number of requests sent per second
# TYPE kafka_consumer_request_rate gauge
kafka_consumer_request_rate{client_id="consumer-retry-2",node_id="node--1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_consumer_response_total The total number of responses received
# TYPE kafka_consumer_response_total counter
kafka_consumer_response_total{client_id="consumer-retry-2",node_id="node--1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_consumer_response_rate The number of responses received per second
# TYPE kafka_consumer_response_rate gauge
kafka_consumer_response_rate{client_id="consumer-retry-2",node_id="node--1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_consumer_select_total The total number of times the I/O layer checked for new I/O to perform
# TYPE kafka_consumer_select_total counter
kafka_consumer_select_total{client_id="consumer-retry-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_consumer_select_total{client_id="consumer-retry-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 313.0
# HELP kafka_consumer_select_rate The number of times the I/O layer checked for new I/O to perform per second
# TYPE kafka_consumer_select_rate gauge
kafka_consumer_select_rate{client_id="consumer-retry-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_consumer_select_rate{client_id="consumer-retry-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 6.902026505545878
# HELP kafka_consumer_successful_authentication_total The total number of connections with successful authentication
# TYPE kafka_consumer_successful_authentication_total counter
kafka_consumer_successful_authentication_total{client_id="consumer-retry-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_consumer_successful_authentication_total{client_id="consumer-retry-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_consumer_successful_authentication_no_reauth_total The total number of connections with successful authentication where the client does not support re-authentication
# TYPE kafka_consumer_successful_authentication_no_reauth_total counter
kafka_consumer_successful_authentication_no_reauth_total{client_id="consumer-retry-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_consumer_successful_authentication_no_reauth_total{client_id="consumer-retry-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_consumer_successful_authentication_rate The number of connections with successful authentication per second
# TYPE kafka_consumer_successful_authentication_rate gauge
kafka_consumer_successful_authentication_rate{client_id="consumer-retry-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_consumer_successful_authentication_rate{client_id="consumer-retry-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_consumer_successful_reauthentication_total The total number of successful re-authentication of connections
# TYPE kafka_consumer_successful_reauthentication_total counter
kafka_consumer_successful_reauthentication_total{client_id="consumer-retry-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_consumer_successful_reauthentication_total{client_id="consumer-retry-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_consumer_successful_reauthentication_rate The number of successful re-authentication of connections per second
# TYPE kafka_consumer_successful_reauthentication_rate gauge
kafka_consumer_successful_reauthentication_rate{client_id="consumer-retry-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_consumer_successful_reauthentication_rate{client_id="consumer-retry-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_consumer_sync_total The total number of group syncs
# TYPE kafka_consumer_sync_total counter
kafka_consumer_sync_total{client_id="consumer-retry-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_consumer_sync_total{client_id="consumer-retry-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_consumer_sync_rate The number of group syncs per second
# TYPE kafka_consumer_sync_rate gauge
kafka_consumer_sync_rate{client_id="consumer-retry-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_consumer_sync_rate{client_id="consumer-retry-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_consumer_time_between_poll_avg The average delay between invocations of poll().
# TYPE kafka_consumer_time_between_poll_avg gauge
kafka_consumer_time_between_poll_avg{client_id="consumer-retry-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 3755.75
# HELP kafka_consumer_time_between_poll_max The max delay between invocations of poll().
# TYPE kafka_consumer_time_between_poll_max gauge
kafka_consumer_time_between_poll_max{client_id="consumer-retry-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 5021.0
# HELP kafka_producer_batch_split_total The total number of batch splits
# TYPE kafka_producer_batch_split_total counter
kafka_producer_batch_split_total{client_id="producer-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_producer_batch_split_total{client_id="producer-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_producer_batch_split_rate The average number of batch splits per second
# TYPE kafka_producer_batch_split_rate gauge
kafka_producer_batch_split_rate{client_id="producer-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_producer_batch_split_rate{client_id="producer-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_producer_buffer_available_bytes The total amount of buffer memory that is not being used (either unallocated or in the free list).
# TYPE kafka_producer_buffer_available_bytes gauge
kafka_producer_buffer_available_bytes{client_id="producer-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 3.3554432E7
kafka_producer_buffer_available_bytes{client_id="producer-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 3.3554432E7
# HELP kafka_producer_buffer_exhausted_total The total number of record sends that are dropped due to buffer exhaustion
# TYPE kafka_producer_buffer_exhausted_total counter
kafka_producer_buffer_exhausted_total{client_id="producer-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_producer_buffer_exhausted_total{client_id="producer-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_producer_buffer_exhausted_rate The average per-second number of record sends that are dropped due to buffer exhaustion
# TYPE kafka_producer_buffer_exhausted_rate gauge
kafka_producer_buffer_exhausted_rate{client_id="producer-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_producer_buffer_exhausted_rate{client_id="producer-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_producer_buffer_total_bytes The maximum amount of buffer memory the client can use (whether or not it is currently used).
# TYPE kafka_producer_buffer_total_bytes gauge
kafka_producer_buffer_total_bytes{client_id="producer-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 3.3554432E7
kafka_producer_buffer_total_bytes{client_id="producer-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 3.3554432E7
# HELP kafka_producer_bufferpool_wait_ratio The fraction of time an appender waits for space allocation.
# TYPE kafka_producer_bufferpool_wait_ratio gauge
kafka_producer_bufferpool_wait_ratio{client_id="producer-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_producer_bufferpool_wait_ratio{client_id="producer-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_producer_bufferpool_wait_time_total The total time an appender waits for space allocation.
# TYPE kafka_producer_bufferpool_wait_time_total counter
kafka_producer_bufferpool_wait_time_total{client_id="producer-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_producer_bufferpool_wait_time_total{client_id="producer-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_producer_connection_close_total The total number of connections closed
# TYPE kafka_producer_connection_close_total counter
kafka_producer_connection_close_total{client_id="producer-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 19.0
kafka_producer_connection_close_total{client_id="producer-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 20.0
# HELP kafka_producer_connection_close_rate The number of connections closed per second
# TYPE kafka_producer_connection_close_rate gauge
kafka_producer_connection_close_rate{client_id="producer-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.41556396404278123
kafka_producer_connection_close_rate{client_id="producer-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.43764633799426683
# HELP kafka_producer_connection_count The current number of active connections.
# TYPE kafka_producer_connection_count gauge
kafka_producer_connection_count{client_id="producer-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_producer_connection_count{client_id="producer-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_producer_connection_creation_total The total number of new connections established
# TYPE kafka_producer_connection_creation_total counter
kafka_producer_connection_creation_total{client_id="producer-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_producer_connection_creation_total{client_id="producer-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_producer_connection_creation_rate The number of new connections established per second
# TYPE kafka_producer_connection_creation_rate gauge
kafka_producer_connection_creation_rate{client_id="producer-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_producer_connection_creation_rate{client_id="producer-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_producer_failed_authentication_total The total number of connections with failed authentication
# TYPE kafka_producer_failed_authentication_total counter
kafka_producer_failed_authentication_total{client_id="producer-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_producer_failed_authentication_total{client_id="producer-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_producer_failed_authentication_rate The number of connections with failed authentication per second
# TYPE kafka_producer_failed_authentication_rate gauge
kafka_producer_failed_authentication_rate{client_id="producer-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_producer_failed_authentication_rate{client_id="producer-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_producer_failed_reauthentication_total The total number of failed re-authentication of connections
# TYPE kafka_producer_failed_reauthentication_total counter
kafka_producer_failed_reauthentication_total{client_id="producer-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_producer_failed_reauthentication_total{client_id="producer-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_producer_failed_reauthentication_rate The number of failed re-authentication of connections per second
# TYPE kafka_producer_failed_reauthentication_rate gauge
kafka_producer_failed_reauthentication_rate{client_id="producer-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_producer_failed_reauthentication_rate{client_id="producer-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_producer_incoming_byte_total The total number of bytes read off all sockets
# TYPE kafka_producer_incoming_byte_total counter
kafka_producer_incoming_byte_total{client_id="producer-1",node_id="node--1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_producer_incoming_byte_total{client_id="producer-2",node_id="node--1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_producer_incoming_byte_rate The number of bytes read off all sockets per second
# TYPE kafka_producer_incoming_byte_rate gauge
kafka_producer_incoming_byte_rate{client_id="producer-1",node_id="node--1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_producer_incoming_byte_rate{client_id="producer-2",node_id="node--1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_producer_io_ratio The fraction of time the I/O thread spent doing I/O
# TYPE kafka_producer_io_ratio gauge
kafka_producer_io_ratio{client_id="producer-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 3.312398407768689E-4
kafka_producer_io_ratio{client_id="producer-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 2.776954200310729E-4
# HELP kafka_producer_io_time_ns_avg The average length of time for I/O per select call in nanoseconds.
# TYPE kafka_producer_io_time_ns_avg gauge
kafka_producer_io_time_ns_avg{client_id="producer-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 48541.5
kafka_producer_io_time_ns_avg{client_id="producer-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 40805.154340836016
# HELP kafka_producer_io_wait_ratio The fraction of time the I/O thread spent waiting
# TYPE kafka_producer_io_wait_ratio gauge
kafka_producer_io_wait_ratio{client_id="producer-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.34178780639447154
kafka_producer_io_wait_ratio{client_id="producer-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.3398313640978513
# HELP kafka_producer_io_wait_time_ns_avg The average length of time the I/O thread spent waiting for a socket ready for reads or writes in nanoseconds.
# TYPE kafka_producer_io_wait_time_ns_avg gauge
kafka_producer_io_wait_time_ns_avg{client_id="producer-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 5.009272763782051E7
kafka_producer_io_wait_time_ns_avg{client_id="producer-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 4.9938819942122184E7
# HELP kafka_producer_io_waittime_total The total time the I/O thread spent waiting
# TYPE kafka_producer_io_waittime_total counter
kafka_producer_io_waittime_total{client_id="producer-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 1.5628931023E10
kafka_producer_io_waittime_total{client_id="producer-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 1.5530973002E10
# HELP kafka_producer_iotime_total The total time the I/O thread spent doing I/O
# TYPE kafka_producer_iotime_total counter
kafka_producer_iotime_total{client_id="producer-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 1.5144948E7
kafka_producer_iotime_total{client_id="producer-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 1.2690403E7
# HELP kafka_producer_metadata_age The age in seconds of the current producer metadata being used.
# TYPE kafka_producer_metadata_age gauge
kafka_producer_metadata_age{client_id="producer-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 1.742318636915E9
kafka_producer_metadata_age{client_id="producer-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 1.742318636915E9
# HELP kafka_producer_network_io_total The total number of network operations (reads or writes) on all connections
# TYPE kafka_producer_network_io_total counter
kafka_producer_network_io_total{client_id="producer-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_producer_network_io_total{client_id="producer-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_producer_network_io_rate The number of network operations (reads or writes) on all connections per second
# TYPE kafka_producer_network_io_rate gauge
kafka_producer_network_io_rate{client_id="producer-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_producer_network_io_rate{client_id="producer-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_producer_outgoing_byte_total The total number of outgoing bytes sent to all servers
# TYPE kafka_producer_outgoing_byte_total counter
kafka_producer_outgoing_byte_total{client_id="producer-1",node_id="node--1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_producer_outgoing_byte_total{client_id="producer-2",node_id="node--1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_producer_outgoing_byte_rate The number of outgoing bytes sent to all servers per second
# TYPE kafka_producer_outgoing_byte_rate gauge
kafka_producer_outgoing_byte_rate{client_id="producer-1",node_id="node--1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_producer_outgoing_byte_rate{client_id="producer-2",node_id="node--1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_producer_record_error_total The total number of record sends that resulted in errors
# TYPE kafka_producer_record_error_total counter
kafka_producer_record_error_total{client_id="producer-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_producer_record_error_total{client_id="producer-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_producer_record_error_rate The average per-second number of record sends that resulted in errors
# TYPE kafka_producer_record_error_rate gauge
kafka_producer_record_error_rate{client_id="producer-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_producer_record_error_rate{client_id="producer-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_producer_record_retry_total The total number of retried record sends
# TYPE kafka_producer_record_retry_total counter
kafka_producer_record_retry_total{client_id="producer-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_producer_record_retry_total{client_id="producer-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_producer_record_retry_rate The average per-second number of retried record sends
# TYPE kafka_producer_record_retry_rate gauge
kafka_producer_record_retry_rate{client_id="producer-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_producer_record_retry_rate{client_id="producer-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_producer_record_send_total The total number of records sent.
# TYPE kafka_producer_record_send_total counter
kafka_producer_record_send_total{client_id="producer-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_producer_record_send_total{client_id="producer-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_producer_record_send_rate The average number of records sent per second.
# TYPE kafka_producer_record_send_rate gauge
kafka_producer_record_send_rate{client_id="producer-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_producer_record_send_rate{client_id="producer-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_producer_request_total The total number of requests sent
# TYPE kafka_producer_request_total counter
kafka_producer_request_total{client_id="producer-1",node_id="node--1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_producer_request_total{client_id="producer-2",node_id="node--1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_producer_request_rate The number of requests sent per second
# TYPE kafka_producer_request_rate gauge
kafka_producer_request_rate{client_id="producer-1",node_id="node--1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_producer_request_rate{client_id="producer-2",node_id="node--1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_producer_requests_in_flight The current number of in-flight requests awaiting a response.
# TYPE kafka_producer_requests_in_flight gauge
kafka_producer_requests_in_flight{client_id="producer-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_producer_requests_in_flight{client_id="producer-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_producer_response_total The total number of responses received
# TYPE kafka_producer_response_total counter
kafka_producer_response_total{client_id="producer-1",node_id="node--1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_producer_response_total{client_id="producer-2",node_id="node--1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_producer_response_rate The number of responses received per second
# TYPE kafka_producer_response_rate gauge
kafka_producer_response_rate{client_id="producer-1",node_id="node--1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_producer_response_rate{client_id="producer-2",node_id="node--1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_producer_select_total The total number of times the I/O layer checked for new I/O to perform
# TYPE kafka_producer_select_total counter
kafka_producer_select_total{client_id="producer-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 312.0
kafka_producer_select_total{client_id="producer-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 311.0
# HELP kafka_producer_select_rate The number of times the I/O layer checked for new I/O to perform per second
# TYPE kafka_producer_select_rate gauge
kafka_producer_select_rate{client_id="producer-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 6.823102324665952
kafka_producer_select_rate{client_id="producer-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 6.804953831342173
# HELP kafka_producer_successful_authentication_total The total number of connections with successful authentication
# TYPE kafka_producer_successful_authentication_total counter
kafka_producer_successful_authentication_total{client_id="producer-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_producer_successful_authentication_total{client_id="producer-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_producer_successful_authentication_no_reauth_total The total number of connections with successful authentication where the client does not support re-authentication
# TYPE kafka_producer_successful_authentication_no_reauth_total counter
kafka_producer_successful_authentication_no_reauth_total{client_id="producer-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_producer_successful_authentication_no_reauth_total{client_id="producer-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_producer_successful_authentication_rate The number of connections with successful authentication per second
# TYPE kafka_producer_successful_authentication_rate gauge
kafka_producer_successful_authentication_rate{client_id="producer-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_producer_successful_authentication_rate{client_id="producer-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_producer_successful_reauthentication_total The total number of successful re-authentication of connections
# TYPE kafka_producer_successful_reauthentication_total counter
kafka_producer_successful_reauthentication_total{client_id="producer-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_producer_successful_reauthentication_total{client_id="producer-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_producer_successful_reauthentication_rate The number of successful re-authentication of connections per second
# TYPE kafka_producer_successful_reauthentication_rate gauge
kafka_producer_successful_reauthentication_rate{client_id="producer-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_producer_successful_reauthentication_rate{client_id="producer-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# HELP kafka_producer_waiting_threads The number of user threads blocked waiting for buffer memory to enqueue their records
# TYPE kafka_producer_waiting_threads gauge
kafka_producer_waiting_threads{client_id="producer-1",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
kafka_producer_waiting_threads{client_id="producer-2",otel_scope_name="io.opentelemetry.kafka-clients-0.11",otel_scope_version="2.0.0-alpha"} 0.0
# TYPE target_info gauge
target_info{host_arch="amd64",host_name="yupiik-lboiteux",os_description="Linux 6.1.0-31-amd64",os_type="linux",process_command_args="[/home/lboiteux/.sdkman/candidates/java/17.0.12-zulu/bin/java, -XX:+ExitOnOutOfMemoryError, -XX:MaxRAMPercentage=75, -javaagent:/home/lboiteux/projets/oca/git/api-document/distribution/target/assembly/opentelemetry/opentelemetry.jar, -Dotel.traces.exporter=none, -Dotel.logs.exporter=none, -Dotel.metrics.exporter=prometheus, -Dotel.exporter.prometheus.port=4444, --add-reads=java.xml=java.logging, --add-exports=java.base/org.apache.karaf.specs.locator=java.xml,ALL-UNNAMED, --patch-module, java.base=/home/lboiteux/projets/oca/git/api-document/distribution/target/assembly/karaf/lib/endorsed/org.apache.karaf.specs.locator-4.3.9.jar, --patch-module, java.xml=/home/lboiteux/projets/oca/git/api-document/distribution/target/assembly/karaf/lib/endorsed/org.apache.karaf.specs.java.xml-4.3.9.jar, --add-opens, java.base/java.security=ALL-UNNAMED, --add-opens, java.base/java.net=ALL-UNNAMED, --add-opens, java.base/java.lang=ALL-UNNAMED, --add-opens, java.base/java.util=ALL-UNNAMED, --add-opens, java.naming/javax.naming.spi=ALL-UNNAMED, --add-opens, java.rmi/sun.rmi.transport.tcp=ALL-UNNAMED, --add-exports=java.base/sun.net.www.protocol.file=ALL-UNNAMED, --add-exports=java.base/sun.net.www.protocol.ftp=ALL-UNNAMED, --add-exports=java.base/sun.net.www.protocol.http=ALL-UNNAMED, --add-exports=java.base/sun.net.www.protocol.https=ALL-UNNAMED, --add-exports=java.base/sun.net.www.protocol.jar=ALL-UNNAMED, --add-exports=java.base/sun.net.www.content.text=ALL-UNNAMED, --add-exports=jdk.xml.dom/org.w3c.dom.html=ALL-UNNAMED, --add-exports=jdk.naming.rmi/com.sun.jndi.url.rmi=ALL-UNNAMED, --add-exports=java.rmi/sun.rmi.registry=ALL-UNNAMED, --add-exports=java.security.sasl/com.sun.security.sasl=ALL-UNNAMED, -Dkaraf.instances=/home/lboiteux/projets/oca/git/api-document/distribution/target/assembly/karaf/instances, -Dkaraf.home=/home/lboiteux/projets/oca/git/api-document/distribution/target/assembly/karaf, -Dkaraf.base=/home/lboiteux/projets/oca/git/api-document/distribution/target/assembly/karaf, -Dkaraf.data=/home/lboiteux/projets/oca/git/api-document/distribution/target/assembly/karaf/data, -Dkaraf.etc=/home/lboiteux/projets/oca/git/api-document/distribution/target/assembly/karaf/etc, -Dkaraf.log=/tmp/apidoc/logs, -Dkaraf.restart.jvm.supported=true, -Djava.io.tmpdir=/home/lboiteux/projets/oca/git/api-document/distribution/target/assembly/karaf/data/tmp, -Djava.util.logging.config.file=/home/lboiteux/projets/oca/git/api-document/distribution/target/assembly/karaf/etc/java.util.logging.properties, -Dkaraf.startLocalConsole=false, -Dkaraf.startRemoteShell=true, -Dkaraf.log.console=ALL, -classpath, /home/lboiteux/projets/oca/git/api-document/distribution/target/assembly/karaf/lib/boot/org.apache.karaf.diagnostic.boot-4.3.9.jar:/home/lboiteux/projets/oca/git/api-document/distribution/target/assembly/karaf/lib/boot/org.apache.karaf.jaas.boot-4.3.9.jar:/home/lboiteux/projets/oca/git/api-document/distribution/target/assembly/karaf/lib/boot/org.apache.karaf.main-4.3.9.jar:/home/lboiteux/projets/oca/git/api-document/distribution/target/assembly/karaf/lib/boot/org.apache.karaf.specs.activator-4.3.9.jar:/home/lboiteux/projets/oca/git/api-document/distribution/target/assembly/karaf/lib/boot/osgi.core-7.0.0.jar:/home/lboiteux/projets/oca/git/api-document/distribution/target/assembly/karaf/lib/jdk9plus/istack-commons-runtime-3.0.10.jar:/home/lboiteux/projets/oca/git/api-document/distribution/target/assembly/karaf/lib/jdk9plus/jakarta.xml.bind-api-2.3.3.jar:/home/lboiteux/projets/oca/git/api-document/distribution/target/assembly/karaf/lib/jdk9plus/javax.annotation-api-1.3.2.jar:/home/lboiteux/projets/oca/git/api-document/distribution/target/assembly/karaf/lib/jdk9plus/jaxb-runtime-2.3.3.jar:/home/lboiteux/projets/oca/git/api-document/distribution/target/assembly/karaf/lib/jdk9plus/org.apache.servicemix.specs.activation-api-1.2.1-1.2.1_3.jar:/home/lboiteux/projets/oca/git/api-document/distribution/target/assembly/karaf/lib/jdk9plus/txw2-2.3.3.jar, org.apache.karaf.main.Main]",process_executable_path="/home/lboiteux/.sdkman/candidates/java/17.0.12-zulu/bin/java",process_pid="310890",process_runtime_description="Azul Systems, Inc. OpenJDK 64-Bit Server VM 17.0.12+7-LTS",process_runtime_name="OpenJDK Runtime Environment",process_runtime_version="17.0.12+7-LTS",service_name="unknown_service:java",telemetry_distro_name="opentelemetry-java-instrumentation",telemetry_distro_version="2.0.0",telemetry_sdk_language="java",telemetry_sdk_name="opentelemetry",telemetry_sdk_version="1.34.1"} 1