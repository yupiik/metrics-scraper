<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <groupId>io.yupiik.metrics</groupId>
  <artifactId>metrics-scrapper</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <name>metrics-scrapper</name>
  <description>metrics-scrapper</description>

  <properties>
    <!-- Main Dependencies -->
    <junit5.version>5.12.0</junit5.version>
    <yupiik-fusion.version>1.0.23</yupiik-fusion.version>
    <yupiik-tools.version>1.2.5</yupiik-tools.version>
    <yupiik-bundlebee.version>1.0.28</yupiik-bundlebee.version>
    <yupiik-logging.version>1.0.8</yupiik-logging.version>

    <!-- Image related configuration -->
    <image.base>ossyupiik/java:21.0.6</image.base>
    <image.workdir>/opt/applications/${project.artifactId}</image.workdir>
    <image.version>${project.version}</image.version>
    <image.name>${project.artifactId}/${project.artifactId}:${image.version}</image.name>
    <image.registry>${project.artifactId}</image.registry>
    <jib.disableUpdateChecks>true</jib.disableUpdateChecks>
    <bundlebee.kube.verbose>false</bundlebee.kube.verbose>
    <bundlebee.namespace>default</bundlebee.namespace>
    <bundlebee.environment>default</bundlebee.environment>
    <bundlebee.alveolus>metrics-scrapper</bundlebee.alveolus>

    <main.class>io.yupiik.fusion.framework.api.main.Launcher</main.class>
  </properties>

  <profiles>
    <profile>
      <!-- Represents a different docker registry environment (here a Raspberry PI) -->
      <id>pi</id>
      <properties>
        <maven.build.timestamp.format>yyyyMMddHHmmss</maven.build.timestamp.format>
        <jib.allowInsecureRegistries>true</jib.allowInsecureRegistries>
        <pi.base>pi:32000/${project.artifactId}</pi.base>
        <image.registry>${pi.base}/</image.registry>
        <image.name>${image.registry}${project.artifactId}:${image.version}</image.name>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>com.google.cloud.tools</groupId>
            <artifactId>jib-maven-plugin</artifactId>
            <configuration>
              <from>
                <image>${image.base}</image>
                <platforms>
                  <platform>
                    <os>linux</os>
                    <architecture>arm64</architecture>
                  </platform>
                </platforms>
              </from>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
  <dependencies>
    <dependency>
      <groupId>io.yupiik.logging</groupId>
      <artifactId>yupiik-logging-jul</artifactId>
      <version>${yupiik-logging.version}</version>
      <scope>runtime</scope>
    </dependency>
    <dependency> <!-- for the doc -->
      <groupId>io.yupiik.fusion</groupId>
      <artifactId>fusion-documentation</artifactId>
      <version>${yupiik-fusion.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>io.yupiik.fusion</groupId>
      <artifactId>fusion-build-api</artifactId>
      <version>${yupiik-fusion.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>io.yupiik.fusion</groupId>
      <artifactId>fusion-processor</artifactId>
      <version>${yupiik-fusion.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>io.yupiik.fusion</groupId>
      <artifactId>fusion-api</artifactId>
      <version>${yupiik-fusion.version}</version>
    </dependency>
    <dependency>
      <groupId>io.yupiik.fusion</groupId>
      <artifactId>fusion-json</artifactId>
      <version>${yupiik-fusion.version}</version>
    </dependency>

    <!-- Test dependencies -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>${junit5.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.yupiik.fusion</groupId>
      <artifactId>fusion-testing</artifactId>
      <version>${yupiik-fusion.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <!-- ENABLE WHEN PUSHED ON GIT
  <scm>
    <tag>HEAD</tag>
    <url>https://github.com/metrics-scrapper/metrics-scrapper.git</url>
    <developerConnection>scm:git:git@github.com:metrics-scrapper/metrics-scrapper.git</developerConnection>
    <connection>scm:git:git@github.com:metrics-scrapper/metrics-scrapper.git</connection>
  </scm>
  -->

  <build>
    <plugins>
      <!-- ENABLE WHEN PUSHED ON GIT
      <plugin>
        <groupId>io.github.git-commit-id</groupId>
        <artifactId>git-commit-id-maven-plugin</artifactId>
        <version>7.0.0</version>
        <executions>
          <execution>
            <id>get-the-git-infos</id>
            <phase>initialize</phase>
            <goals>
              <goal>revision</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <injectAllReactorProjects>true</injectAllReactorProjects>
          <generateGitPropertiesFile>false</generateGitPropertiesFile>
          <dateFormat>yyyy-MM-dd'T'HH:mm:ss'Z'</dateFormat>
          <dateFormatTimeZone>GMT</dateFormatTimeZone>
          <includeOnlyProperties>
            <includeOnlyProperty>^git.branch$</includeOnlyProperty>
            <includeOnlyProperty>^git.remote.origin.url$</includeOnlyProperty>
            <includeOnlyProperty>^git.commit.id$</includeOnlyProperty>
            <includeOnlyProperty>^git.commit.time$</includeOnlyProperty>
          </includeOnlyProperties>
        </configuration>
      </plugin>
      -->
      <plugin> <!-- mvn [compile] yupiik-tools:serve-minisite -e [-Dyupiik.minisite.openBrowser=false] -->
        <groupId>io.yupiik.maven</groupId>
        <artifactId>yupiik-tools-maven-plugin</artifactId>
        <version>${yupiik-tools.version}</version>
        <configuration>
          <siteBase>https://${project.groupId}.github.io/${project.artifactId}</siteBase>
          <logoText>${project.artifactId}</logoText>
          <indexText>${project.artifactId}</indexText>
          <copyright>${project.artifactId}</copyright>
          <linkedInCompany>${project.artifactId}</linkedInCompany>
          <indexSubTitle>${project.description}</indexSubTitle>
          <injectYupiikTemplateExtensionPoints>false</injectYupiikTemplateExtensionPoints>
          <preferYupiikAsciidoc>true</preferYupiikAsciidoc>
          <preActions>
            <preAction>
              <type>io.yupiik.fusion.documentation.DocumentationGenerator</type>
              <configuration>
                <includeEnvironmentNames>true</includeEnvironmentNames>
                <module>${project.artifactId}</module>
                <urls>file://${project.build.outputDirectory}/META-INF/fusion/configuration/documentation.json</urls>
              </configuration>
            </preAction>
            <preAction>
              <type>io.yupiik.fusion.documentation.OpenRpcGenerator</type>
              <configuration>
                <output>${project.basedir}/src/main/minisite/content/_partials/generated/${project.artifactId}.openrpc.json</output>
                <title>${project.artifactId} API</title>
              </configuration>
            </preAction>
            <preAction>
              <type>io.yupiik.fusion.documentation.OpenRPC2Adoc</type>
              <configuration>
                <input>${project.build.outputDirectory}/META-INF/fusion/jsonrpc/openrpc.json</input>
                <output>${project.basedir}/src/main/minisite/content/_partials/generated/${project.artifactId}.openrpc.adoc</output>
              </configuration>
            </preAction>
            <preAction>
              <type>copy</type>
              <configuration>
                <from>${project.basedir}/src/main/minisite/content/_partials/generated/deployment/placeholders.completion.properties</from>
                <to>${project.build.directory}/${project.build.finalName}/completion/placeholders.completion.properties</to>
              </configuration>
            </preAction>
          </preActions>
          <customScripts>
          <![CDATA[[
          <script>
          $(document).ready(function(){
            function filterTables() {
              $('input[table-filter]').on('keyup', function () {
                var input = $(this);
                var value = input.val().toLowerCase();
                $('table.' + input.attr('table-filter') + ' tr').filter(function () {
                  $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1);
                });
              });
            }

            filterTables();
          });
          </script>
          ]]>
          </customScripts>
          <attributes>
            <partialsdir>${project.basedir}/src/main/minisite/content/_partials</partialsdir>
            <!-- ENABLE WHEN PUSHED ON GIT if you want these info in the attributes
            <gitCommitId>${git.commit.id}</gitCommitId>
            <gitBranch>${git.branch}</gitBranch>
            <gitTime>${git.commit.time}</gitTime>
            -->
          </attributes>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>io.yupiik.maven</groupId>
            <artifactId>asciidoc-java</artifactId>
            <version>${yupiik-tools.version}</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin> <!-- mvn bundlebee:apply [-D....] -->
        <groupId>io.yupiik</groupId>
        <artifactId>bundlebee-maven-plugin</artifactId>
        <version>${yupiik-bundlebee.version}</version>
        <executions>
          <execution>
            <id>doc</id>
            <goals>
              <goal>placeholder-extract</goal>
            </goals>
            <phase>compile</phase>
            <configuration>
              <outputType>FILE</outputType>
              <failOnInvalidDescription>true</failOnInvalidDescription>
              <dumpLocation>${project.basedir}/src/main/minisite/content/_partials/generated/deployment</dumpLocation>
              <descriptions>${project.basedir}/src/main/bundlebee/placeholders.descriptions.properties</descriptions>
            </configuration>
          </execution>
        </executions>
        <configuration>
          <manifest>${project.basedir}/src/main/bundlebee/manifest.json</manifest>
          <alveolus>${bundlebee.alveolus}</alveolus>
          <mavenRepositoriesDownloadsEnabled>true</mavenRepositoriesDownloadsEnabled>
          <mavenRepositoriesSnapshot>https://oss.sonatype.org/content/repositories/snapshots/</mavenRepositoriesSnapshot>
          <kubeVerbose>${bundlebee.kube.verbose}</kubeVerbose>
          <kubeNamespace>${bundlebee.namespace}</kubeNamespace>
          <skipPackaging>
            <skipPackaging>none</skipPackaging>
          </skipPackaging>
          <customPlaceholders>
            <app.deploytime>${maven.build.timestamp}</app.deploytime>
            <!-- to extract the environment configuration in a file (supports maven placeholders)
            <bundlebee-placeholder-import>${project.basedir}/environment/${bundlebee.environment}.properties</bundlebee-placeholder-import>
            -->
          </customPlaceholders>
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.google.cloud.tools</groupId>
        <artifactId>jib-maven-plugin</artifactId>
        <version>3.4.0</version>
        <!--
        mvn package jib:build [-Dimage.registry=...] -> will be pushed
        mvn package jib:dockerBuild -> local docker image
        -->
        <configuration>
          <containerizingMode>packaged</containerizingMode>
          <from>
            <image>${image.base}</image>
          </from>
          <to>
            <image>${image.name}</image>
          </to>
          <container>
            <mainClass>io.yupiik.fusion.framework.api.main.Launcher</mainClass>
            <appRoot>${image.workdir}</appRoot>
            <workingDirectory>${image.workdir}</workingDirectory>
            <extraClasspath>${image.workdir}/custom/*:${image.workdir}/custom</extraClasspath>
            <creationTime>USE_CURRENT_TIMESTAMP</creationTime>
            <jvmFlags>
              <jvmFlag>-Djava.util.logging.manager=io.yupiik.logging.jul.YupiikLogManager</jvmFlag>
              <jvmFlag>-Dio.yupiik.logging.jul.handler.AsyncHandler.formatter=json</jvmFlag>
              <jvmFlag>-Djava.security.egd=file:/dev/./urandom</jvmFlag>
              <jvmFlag>-Djdk.serialFilter=!*</jvmFlag>
              <jvmFlag>-Djdk.jndi.object.factoriesFilter=!*</jvmFlag>
              <jvmFlag>-Dcom.sun.jndi.ldap.object.trustSerialData=false</jvmFlag>
            </jvmFlags>
            <labels>
              <!-- ENABLE WHEN PUSHED ON GIT if you want these info in the attributes
              <org.opencontainers.image.revision>${git.commit.id}</org.opencontainers.image.revision>
              <org.opencontainers.image.ref.name>${git.branch}</org.opencontainers.image.ref.name>
              <org.opencontainers.image.source>${git.remote.origin.url}</org.opencontainers.image.source>
              <org.opencontainers.image.url>${project.scm.url}</org.opencontainers.image.url>
              <org.opencontainers.image.documentation>${project.parent.parent.scm.url}</org.opencontainers.image.documentation>
              -->
              <org.opencontainers.image.created>${maven.build.timestamp}</org.opencontainers.image.created>
              <org.opencontainers.image.authors>${project.artifactId}</org.opencontainers.image.authors>
              <org.opencontainers.image.vendor>${project.artifactId}</org.opencontainers.image.vendor>
              <org.opencontainers.image.title>${project.artifactId}</org.opencontainers.image.title>
              <org.opencontainers.image.description>${project.description}</org.opencontainers.image.description>
              <org.opencontainers.image.version>${project.version}</org.opencontainers.image.version>
              <com.application.params>_JAVA_OPTIONS=...</com.application.params>
              <com.application.cmd>docker run ${image.name} &lt;args&gt;</com.application.cmd>
            </labels>
          </container>
          <outputPaths>
            <imageJson>${project.build.directory}/jib-image.json</imageJson>
          </outputPaths>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-clean-plugin</artifactId>
        <version>3.3.2</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.3.1</version>
        <configuration>
          <encoding>UTF-8</encoding>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.11.0</version>
        <executions>
          <execution>
            <id>default-process-annotations</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>compile</goal>
            </goals>
            <configuration>
              <proc>only</proc>
              <useIncrementalCompilation>true</useIncrementalCompilation>
            </configuration>
          </execution>
          <execution>
            <id>test-process-annotations</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>testCompile</goal>
            </goals>
            <configuration>
              <proc>only</proc>
              <useIncrementalCompilation>true</useIncrementalCompilation>
            </configuration>
          </execution>
        </executions>
        <configuration>
          <proc>none</proc>
          <source>21</source>
          <target>21</target>
          <release>21</release>
          <encoding>UTF-8</encoding>
          <useIncrementalCompilation>false</useIncrementalCompilation>
          <compilerArgs>
            <compilerArg>-parameters</compilerArg>
          </compilerArgs>
          <annotationProcessors>
            <annotationProcessor>io.yupiik.fusion.framework.processor.FusionProcessor</annotationProcessor>
          </annotationProcessors>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.2.3</version>
        <configuration>
          <trimStackTrace>false</trimStackTrace>
          <statelessTestsetInfoReporter implementation="org.apache.maven.plugin.surefire.extensions.junit5.JUnit5StatelessTestsetInfoTreeReporter"/>
          <systemPropertyVariables>
            <java.net.preferIPv4Stack>true</java.net.preferIPv4Stack>
            <java.util.logging.manager>io.yupiik.logging.jul.YupiikLogManager</java.util.logging.manager>
          </systemPropertyVariables>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>me.fabriciorby</groupId>
            <artifactId>maven-surefire-junit5-tree-reporter</artifactId>
            <version>0.1.0</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.3.0</version>
        <configuration>
          <excludes>
            <exclude>**/.keepit</exclude>
            <exclude>**/build/**</exclude>
          </excludes>
          <archive combine.children="append">
            <manifestEntries>
              <App-Build-Timestamp>${maven.build.timestamp}</App-Build-Timestamp>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-install-plugin</artifactId>
        <version>3.1.1</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>3.0.0-M1</version>
        <configuration>
          <releaseProfiles>release</releaseProfiles>
          <autoVersionSubmodules>true</autoVersionSubmodules>
        </configuration>
      </plugin>
      <plugin> <!--  mvn ossindex:audit -->
        <groupId>org.sonatype.ossindex.maven</groupId>
        <artifactId>ossindex-maven-plugin</artifactId>
        <version>3.1.0</version>
        <configuration>
          <scope>compile,runtime</scope>
        </configuration>
      </plugin>
      <plugin><!-- mvn exec:java -->
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>3.5.0</version>
        <configuration>
          <mainClass>${main.class}</mainClass>
          <systemProperties>
            <property>
              <key>java.util.logging.manager</key>
              <value>io.yupiik.logging.jul.YupiikLogManager</value>
            </property>
            <property>
              <key>metrics-scrapper.scrappers.length</key>
              <value>1</value>
            </property>
            <property>
              <key>metrics-scrapper.scrappers.0.url</key>
              <value>http://localhost:8080/metrics</value>
            </property>
            <property>
              <key>metrics-scrapper.scrappers.0.scrapping.interval</key>
              <value>1000</value>
            </property>
            <property>
              <key>metrics-scrapper.elasticsearch.base</key>
              <value>http://localhost:9200</value>
            </property>
            <property>
              <key>metrics-scrapper.elasticsearch.indexPrefix</key>
              <value>test-scrapper-</value>
            </property>
            <property>
              <key>io.yupiik.metrics.metricsscrapper.level</key>
              <value>FINER</value>
            </property>
          </systemProperties>
        </configuration>
      </plugin>
      <!-- mvn package arthur:native-image-->
      <plugin>
        <groupId>org.apache.geronimo.arthur</groupId>
        <artifactId>arthur-maven-plugin</artifactId>
        <version>1.0.9</version>
        <configuration>
          <usePackagedArtifact>true</usePackagedArtifact>
          <graalVersion>21.0.2</graalVersion>
          <graalDownloadUrl>https://github.com/graalvm/graalvm-ce-builds/releases/download/jdk-21.0.2/graalvm-community-jdk-21.0.2_linux-x64_bin.tar.gz</graalDownloadUrl>
          <buildStaticImage>false</buildStaticImage>
          <useLDD>true</useLDD>
          <includeNatives>true</includeNatives>
          <fallbackMode>no</fallbackMode>
          <enableAllSecurityServices>false</enableAllSecurityServices>
          <scanningExcludedArtifacts>*</scanningExcludedArtifacts>
          <main>io.yupiik.metrics.metricsscrapper.MetricsScrapper</main>
          <customOptions>
            <customOption>-Djava.util.logging.manager=io.yupiik.logging.jul.YupiikLogManager</customOption>
            <customOption>-Djava.net.preferIPv4Stack=true</customOption>
            <customOption>-Duser.language=en</customOption>
            <customOption>-Duser.country=US</customOption>
            <customOption>-Dfile.encoding=UTF-8</customOption>
            <customOption>-H:+UnlockExperimentalVMOptions</customOption>
          </customOptions>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
